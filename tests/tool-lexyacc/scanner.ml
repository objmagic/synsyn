# 18 "scanner.mll"
 
open Syntax
open Grammar
open Scan_aux

# 8 "scanner.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\234\255\235\255\236\255\237\255\238\255\240\255\241\255\
    \242\255\243\255\244\255\247\255\001\000\249\255\250\255\251\255\
    \252\255\086\000\192\000\020\001\002\000\005\000\254\255\104\001\
    \188\001\248\255\195\000\249\255\250\255\004\000\252\255\253\255\
    \254\255\255\255\251\255\144\000\250\255\251\255\046\002\255\255\
    \000\000\253\255\118\000\161\000\252\255\145\000\035\002\008\000\
    \255\255\171\000\019\000\254\255\012\002\023\000\253\255\037\002\
    \251\255\252\255\253\255\023\000\050\000\255\255\254\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\021\000\255\255\255\255\255\255\
    \255\255\009\000\002\000\002\000\016\000\000\000\255\255\002\000\
    \255\255\255\255\255\255\255\255\255\255\006\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\005\000\255\255\
    \255\255\255\255\001\000\255\255\255\255\255\255\003\000\003\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\004\000\004\000\255\255\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\
    \000\000\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\000\000\027\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\036\000\000\000\000\000\255\255\000\000\
    \255\255\000\000\255\255\255\255\000\000\047\000\255\255\255\255\
    \000\000\255\255\255\255\000\000\255\255\255\255\000\000\056\000\
    \000\000\000\000\000\000\255\255\255\255\000\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\021\000\021\000\000\000\000\000\021\000\021\000\021\000\
    \000\000\000\000\021\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \021\000\000\000\016\000\000\000\000\000\021\000\000\000\015\000\
    \020\000\005\000\008\000\006\000\022\000\003\000\034\000\048\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\043\000\051\000\012\000\025\000\013\000\054\000\007\000\
    \062\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\010\000\061\000\009\000\004\000\017\000\
    \000\000\018\000\018\000\018\000\018\000\019\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\014\000\011\000\018\000\000\000\042\000\
    \042\000\000\000\042\000\042\000\000\000\000\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \042\000\000\000\000\000\000\000\000\000\000\000\042\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\000\000\039\000\000\000\000\000\000\000\000\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\044\000\044\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\044\000\044\000\052\000\052\000\052\000\052\000\052\000\
    \052\000\052\000\052\000\052\000\052\000\031\000\000\000\018\000\
    \000\000\000\000\030\000\029\000\038\000\046\000\000\000\000\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\000\000\000\000\000\000\000\000\024\000\
    \000\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\000\000\000\000\033\000\000\000\
    \032\000\000\000\000\000\000\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\000\000\
    \000\000\000\000\000\000\024\000\000\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\023\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \037\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\028\000\000\000\000\000\000\000\024\000\
    \000\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\042\000\
    \042\000\000\000\042\000\042\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\000\000\058\000\
    \042\000\000\000\050\000\000\000\000\000\060\000\042\000\059\000\
    \041\000\000\000\000\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\000\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\050\000\
    \000\000\000\000\000\000\000\000\000\000\050\000\000\000\000\000\
    \000\000\000\000\041\000\000\000\000\000\000\000\000\000\000\000\
    \041\000\050\000\000\000\000\000\000\000\050\000\000\000\050\000\
    \000\000\000\000\000\000\000\000\041\000\000\000\000\000\000\000\
    \041\000\000\000\041\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\057\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\021\000\021\000\
    \255\255\255\255\021\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\255\255\255\255\021\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\020\000\000\000\029\000\047\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\050\000\000\000\012\000\000\000\053\000\000\000\
    \059\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\060\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\017\000\255\255\042\000\
    \042\000\255\255\042\000\042\000\255\255\255\255\017\000\017\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \042\000\255\255\255\255\255\255\255\255\255\255\042\000\017\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \017\000\255\255\035\000\255\255\255\255\255\255\255\255\017\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \017\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\043\000\043\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\026\000\255\255\018\000\
    \255\255\255\255\026\000\026\000\035\000\045\000\255\255\255\255\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\255\255\255\255\255\255\255\255\018\000\
    \255\255\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\019\000\255\255\255\255\026\000\255\255\
    \026\000\255\255\255\255\255\255\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\255\255\
    \255\255\255\255\255\255\019\000\255\255\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\023\000\
    \035\000\045\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\026\000\255\255\255\255\255\255\023\000\
    \255\255\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\024\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\038\000\
    \038\000\255\255\038\000\038\000\052\000\052\000\052\000\052\000\
    \052\000\052\000\052\000\052\000\052\000\052\000\255\255\055\000\
    \038\000\255\255\046\000\255\255\255\255\055\000\038\000\055\000\
    \038\000\255\255\255\255\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\255\255\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\046\000\
    \255\255\255\255\255\255\255\255\255\255\046\000\255\255\255\255\
    \255\255\255\255\038\000\255\255\255\255\255\255\255\255\255\255\
    \038\000\046\000\255\255\255\255\255\255\046\000\255\255\046\000\
    \255\255\255\255\255\255\255\255\038\000\255\255\255\255\255\255\
    \038\000\255\255\038\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\055\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec main lexbuf =
    __ocaml_lex_main_rec lexbuf 0
and __ocaml_lex_main_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 26 "scanner.mll"
    ( main lexbuf )
# 264 "scanner.ml"

  | 1 ->
# 28 "scanner.mll"
    ( comment_depth := 1;
      comment lexbuf;
      main lexbuf )
# 271 "scanner.ml"

  | 2 ->
# 33 "scanner.mll"
    ( match Lexing.lexeme lexbuf with
        "rule" -> Trule
      | "parse" -> Tparse
      | "and" -> Tand
      | "eof" -> Teof
      | s -> Tident s )
# 281 "scanner.ml"

  | 3 ->
# 40 "scanner.mll"
    ( reset_string_buffer();
      string lexbuf;
      Tstring(get_stored_string()) )
# 288 "scanner.ml"

  | 4 ->
# 44 "scanner.mll"
    ( Tchar(char lexbuf) )
# 293 "scanner.ml"

  | 5 ->
# 46 "scanner.mll"
    ( let n1 = Lexing.lexeme_end lexbuf in
        brace_depth := 1;
        let n2 = action lexbuf in
          Taction(Location(n1, n2)) )
# 301 "scanner.ml"

  | 6 ->
# 50 "scanner.mll"
         ( Tequal )
# 306 "scanner.ml"

  | 7 ->
# 51 "scanner.mll"
          ( Tend )
# 311 "scanner.ml"

  | 8 ->
# 52 "scanner.mll"
         ( Tor )
# 316 "scanner.ml"

  | 9 ->
# 53 "scanner.mll"
         ( Tunderscore )
# 321 "scanner.ml"

  | 10 ->
# 54 "scanner.mll"
           ( Teof )
# 326 "scanner.ml"

  | 11 ->
# 55 "scanner.mll"
         ( Tlbracket )
# 331 "scanner.ml"

  | 12 ->
# 56 "scanner.mll"
         ( Trbracket )
# 336 "scanner.ml"

  | 13 ->
# 57 "scanner.mll"
         ( Tstar )
# 341 "scanner.ml"

  | 14 ->
# 58 "scanner.mll"
         ( Tmaybe )
# 346 "scanner.ml"

  | 15 ->
# 59 "scanner.mll"
         ( Tplus )
# 351 "scanner.ml"

  | 16 ->
# 60 "scanner.mll"
         ( Tlparen )
# 356 "scanner.ml"

  | 17 ->
# 61 "scanner.mll"
         ( Trparen )
# 361 "scanner.ml"

  | 18 ->
# 62 "scanner.mll"
         ( Tcaret )
# 366 "scanner.ml"

  | 19 ->
# 63 "scanner.mll"
         ( Tdash )
# 371 "scanner.ml"

  | 20 ->
# 65 "scanner.mll"
    ( raise(Lexical_error "unterminated lexer definition") )
# 376 "scanner.ml"

  | 21 ->
# 67 "scanner.mll"
    ( raise(Lexical_error("illegal character " ^ Lexing.lexeme lexbuf)) )
# 381 "scanner.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_main_rec lexbuf __ocaml_lex_state

and action lexbuf =
    __ocaml_lex_action_rec lexbuf 26
and __ocaml_lex_action_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 71 "scanner.mll"
    ( incr brace_depth;
      action lexbuf )
# 394 "scanner.ml"

  | 1 ->
# 74 "scanner.mll"
    ( decr brace_depth;
      if !brace_depth = 0 then Lexing.lexeme_start lexbuf else action lexbuf )
# 400 "scanner.ml"

  | 2 ->
# 77 "scanner.mll"
    ( reset_string_buffer();
      string lexbuf;
      reset_string_buffer();
      action lexbuf )
# 408 "scanner.ml"

  | 3 ->
# 82 "scanner.mll"
    ( let _ = char lexbuf in action lexbuf )
# 413 "scanner.ml"

  | 4 ->
# 84 "scanner.mll"
    ( comment_depth := 1;
      comment lexbuf;
      action lexbuf )
# 420 "scanner.ml"

  | 5 ->
# 88 "scanner.mll"
    ( raise (Lexical_error "unterminated action") )
# 425 "scanner.ml"

  | 6 ->
# 90 "scanner.mll"
    ( action lexbuf )
# 430 "scanner.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_action_rec lexbuf __ocaml_lex_state

and string lexbuf =
    __ocaml_lex_string_rec lexbuf 35
and __ocaml_lex_string_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 94 "scanner.mll"
    ( () )
# 442 "scanner.ml"

  | 1 ->
# 96 "scanner.mll"
    ( string lexbuf )
# 447 "scanner.ml"

  | 2 ->
# 98 "scanner.mll"
    ( store_string_char(char_for_backslash(Lexing.lexeme_char lexbuf 1));
      string lexbuf )
# 453 "scanner.ml"

  | 3 ->
# 101 "scanner.mll"
    ( store_string_char(char_for_decimal_code lexbuf 1);
      string lexbuf )
# 459 "scanner.ml"

  | 4 ->
# 104 "scanner.mll"
    ( raise(Lexical_error "unterminated string") )
# 464 "scanner.ml"

  | 5 ->
# 106 "scanner.mll"
    ( store_string_char(Lexing.lexeme_char lexbuf 0);
      string lexbuf )
# 470 "scanner.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_string_rec lexbuf __ocaml_lex_state

and char lexbuf =
    __ocaml_lex_char_rec lexbuf 45
and __ocaml_lex_char_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 111 "scanner.mll"
    ( Lexing.lexeme_char lexbuf 0 )
# 482 "scanner.ml"

  | 1 ->
# 113 "scanner.mll"
    ( char_for_backslash (Lexing.lexeme_char lexbuf 1) )
# 487 "scanner.ml"

  | 2 ->
# 115 "scanner.mll"
    ( char_for_decimal_code lexbuf 1 )
# 492 "scanner.ml"

  | 3 ->
# 117 "scanner.mll"
    ( raise(Lexical_error "bad character constant") )
# 497 "scanner.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_char_rec lexbuf __ocaml_lex_state

and comment lexbuf =
    __ocaml_lex_comment_rec lexbuf 55
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 121 "scanner.mll"
    ( incr comment_depth; comment lexbuf )
# 509 "scanner.ml"

  | 1 ->
# 123 "scanner.mll"
    ( decr comment_depth;
      if !comment_depth = 0 then () else comment lexbuf )
# 515 "scanner.ml"

  | 2 ->
# 126 "scanner.mll"
    ( reset_string_buffer();
      string lexbuf;
      reset_string_buffer();
      comment lexbuf )
# 523 "scanner.ml"

  | 3 ->
# 131 "scanner.mll"
    ( raise(Lexical_error "unterminated comment") )
# 528 "scanner.ml"

  | 4 ->
# 133 "scanner.mll"
    ( comment lexbuf )
# 533 "scanner.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

;;

